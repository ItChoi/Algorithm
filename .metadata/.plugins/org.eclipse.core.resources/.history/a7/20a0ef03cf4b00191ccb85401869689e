# 01장

### 01-1 알고리즘이란?
	
	ex)
	Scanner stdIn = new Scanner(System.in);
	- stdIn은 키보드와 연결된 표준 입력 스트림(System.in)에서 문자나 숫자를 꺼내는 장치 역할을 한다.
	
##### 연습문제
Q1) 네 값의 최대 값을 구하는 max4 메서드를 작성하세요.
	- static int max4(int a, int b, int c, int d)

	A1)
	```class
	public static int max4(int a, int b, int c, int d) {
		int max = a;
		
		if (b > max) {
			max = b;
		} 
		
		if (c > max) {
			max = c;
		} 
		
		if (d > max) {
			max = d;
		}
		
		return max;
	}
	}
	```
	

Q2) 세 값의 최솟값을 구하는 min3 메서드를 작성하세요.
	- static int min3(int a, int b, int c)
	
	A2)
	```class
	public static int min3(int a, int b, int c) {
		int min = a;
		
		if (b < min) {
			min = b;
		} 
		
		if (c < min) {
			min = c;
		} 
		
		return min;
	}
	```
	
	
	
Q3) 네 값의 최솟값을 구하는 min4 메서드를 작성하세요.
	- static int min4(int a, int b, int c, int d)
	
	A3)
	```class
	public static int min4(int a, int b, int c, int d) {
		int min = a;
		
		if (b < min) {
			min = b;
		} 
		
		if (c < min) {
			min = c;
		} 
		
		if (d < min) {
			min = d;
		} 
		
		return min;
	}
	```
	
	
##### 실습 1C-1 세 값의 중앙값 구하기. (세 값의 대소 관계의 조합읜 13가지 종류가 있다. 해보기.)
	ex) static int med3(int a, int b, int c)
	
	A1)
	```class
	public static int med3(int d, int dd, int ddd) {
		int val = 0;
		
		int a = 3; int b = 3; int c = 3;
		
		
		if (a >= b) {
			
			if (b >= c) {
				val = b;
			} else if (a > c) {
				val = c;
			} else {
				val = a;
			}
			
		} else if(b > c) {
			
			if (a > c) {
				val = a;
			} else {
				val = c;
			}
			
		} else {
			val = b;
		}
		
		System.out.println("val: " + val);
		
		return val;
	}
	```
	
##### 연습문제

Q8) 1부터 10까지의 합은 (1 + 10) * 5와 같은 방법으로 구할 수 있다. 가우스의 덧셈이라는 방법을 이용해보자.
	A8) 
	```class
	int n = 31;
	int i = 1;
	int sum = 0;
	
	sum = (i + n) * n / 2;
	
	System.out.println(sum);
	```
	
##### % 드모르간 법칙
	- 각 조건을 부정하고 논리곱을 논리합으로, 논리합을 논리곱으로 바꾸고 다시 전체를 부정하면 원래의 조건과 같다.
		ex) x && y와 !(!x || !y)는 같다.
		ex) x || y와 !(!x && !y)는 같다.
		
		
##### 연습문제
Q12) 곱셈표 형식에 맞게 출력하는 프로그램 작성 (구분선은 수직선 기호(|), 마이너스 기호(-), 플러스 기호(+) 사용

	A12)
	```class
	System.out.print("   |");
	for (int a = 1; a <= 9; a++) {
		System.out.printf("%3d", a);
	}
	System.out.println("\n---+---------------------------");
	
	for (int i = 1; i <= 9; i++) {
		System.out.printf("%3d|", i);
		
		for (int j = 1; j <= 9; j++) {
			System.out.printf("%3d", i * j);
		}
		
		System.out.println();
	}
	```
	
Q16) n 단의 피라미드를 출력하는 메서드 작성
	ex) static void spira(int n)
	```class
	static void spira(int n) {
		
		int index = 0;
		for (int i = 1; i <= n; i++) {
			
			for (int j = i; j <= n; j++) {
				System.out.print(" ");
			}
			
			for (int k = 1; k <= index + i; k++) {
				System.out.print("*");
			}
			
			index++;
			System.out.println();
		}
		
	}
	```
	


### 02-1 배열
	##### 자료구조: 데이터 단위와 데이터 자체 사이의 물리적 또는 논리적인 관계, 데이터 단위는 데이터를 구성하는 한 덩어리라고 생각하면 된다.
	 쉽게 말해  자료를 효율적으로 이용할 수 있도록 컴퓨터에 저장하는 방법이다.  
	 
	 % 배열은 같은 자료형의 변수로 이루어진 구성요소(component)가 모인 것이다.
	 
	 1) 사용 방법
	 ```class
	 int[] a;
	 int a[];
	 int[] a = new int[5];
	 int[] a = new int[] {1, 2, 3, 4, 5};	
	 int[] a = {1, 2, 3, 4, 5};
	```
	2) 배열의 복제(클론)
	```class
	int[] a = {1, 2, 3, 4, 5};
	int[] b = a.clone();
	
	b[3] = 0;
	// a = 1 2 3 4 5
	// b = 1 2 3 0 5
	```
	
##### 연습문제
Q2) 배열 요소 역순으로 정렬
	A2)
	```class
	int[] a = {1, 2, 3 , 4, 5};
	int temp;
	
	int leng = a.length;
	
	for (int i = 0; i < leng / 2; i++) {
		temp = a[i];
		a[i] = a[leng - i - 1];
		a[leng - i - 1] = temp;
		
	}
	```
	
Q5) 배열 b의 모든 요소를 배열 a에 역순으로 복사하는 메서드 rcopy 완성
	ex) static void rcopy(int[] a, int[] b)
	```class
	public static void rcopy(int[] a, int[] b) {
		int temp;
		int mid;
		
		int leng = a.length;
		
		for (int i = 0; i < (leng % 2 == 0 ? leng / 2 : leng / 2 + 1); i++) {
			
			temp = a[i];
			b[i] = a[leng - i - 1];
			b[leng - i - 1] = temp;
		}
		
		for (int aaa : b) {
			System.out.println("aaaa: " + aaa);
		}
		
	}
	```
	
	%%%% 한 해의 경과 일 수를 계산하는 프로그램
	```class
	
	```
	 