# 04장 스택과 큐

### 04-1 스택
	- 스택은 데이터를 일시적으로 저장하기 위한 자료구조로, 가장 나중에 넣은 데이터를 가장 먼저 꺼낸다.
	
	
##### 스택이란?
	- 스택(stack)은 데이터의 입력과 출력 순서는 후입선출(LIFO, Last In First Out)이다.
	스택에 데이터를 넣은 작업을 push라 하고, 꺼내는 작업을 pop이라고 한다. 스택에 꼭대기를 top이라 하고, 가장 하단을 bottom이라고 한다.
	
	- 자바 프로그램에서 메서드를 호출하고 실행할 때 프로그램 내부에서는 스택을 사용한다.
	

	
### 04-1 큐
	- 큐도 스택과 마찬가지로 데이터를 일시적으로 쌓아 놓은 자료구조다. 하지만 가장 먼저 넣은 데이터를 가장 먼저
	꺼내는 선입선출(FIFO: First In First Out)인 점이 스택과 다르다.

##### 큐란?
	- 큐의 예는 은행 창구에서 차례를 기다리는 대기열과 같다. 큐에 데이터를 넣는 작업을 인큐(enqueue)라 하고,
	꺼내는 작업을 디큐(dequeue)라 한다. 데이터 꺼내는 쪽을 프런트(front)라 하고, 데이터를 넣는 쪽을
	리어(rear)라고 한다. 디큐를 하고 나면 배열의 모든 요소를 하나씩 앞쪽으로 옮겨야(shift) 한다.
	
% 링버퍼로 큐 만들기
	- 배열 요소를 앞쪽으로 옮기지 않는 큐를 위해 사용하는 자료구조가 링 버퍼(ring buffer)이다. 링 버퍼는 배열의 처음이
	끝과 연결되었다고 보는 자료구조다. 여기서 논리적으로 어떤 요소가 첫 번째 요소이고 어떤 요소가 마지막 요소인지 식별하기 위한
	변수가 front와 rear 이다.
	ex) a[0] = 73, a[1] = 79, a[2] = null 
	a[3] = null, a[4] = 35, a[5] = 56 		// length = 6
	여기서 front는 length = 4, rear는  length 2
	
	- que가 빈 상태와 꽉 찬 상태에서 front와 rear의 값은 같다 따라서 구분 해줄 num과 max가 있어야 한다.
	 
	 ```
	 class IntQueue {
	private int max;		// 큐의 용량
	private int front;		// 첫 번째 요소 커서
	private int rear;		// 마지막 요소 커서
	private int num;		// 현재 데이터 수
	private int[] que;		// 큐 본체
	
	
	// 실행 시 예외 : 큐가 비어 있음
	public class EmptyIntQueueException extends RuntimeException {
		public EmptyIntQueueException() { } 
	}
	
	// 실행 시 예외 : 큐가 가득 참
	public class OverflowIntQueueException extends RuntimeException {
		public OverflowIntQueueException() { } 
	}
	
	public IntQueue(int capacity) {
		num = front = rear = 0;
		max = capacity;
		
		try {
			que = new int[max];
		} catch(OutOfMemoryError e) {
			max = 0;
		}
	}
	
	public int enque(int x) throws OverflowIntQueueException {
		if (num >= max) {
			throw new OverflowIntQueueException();
		}
		
		que[rear++] = x;
		num++;
		
		if (rear == max) {
			rear = 0;
		}
		return x;
	}
	
	public int deque() throws EmptyIntQueueException {
		if (num <= 0) {
			throw new EmptyIntQueueException();
		}
		
		int x = que[front++];
		num --;
		
		if (front == max) {
			front = 0;
		}
		
		return x;
	}
	
	public void dump() {
		if (num <= 0) {
			System.out.println("큐가 비어 있습니다.");
		} else {
			for (int i = 0; i < num; i++) {
				System.out.println(que[(i + front) % max] + " ");
			}
			System.out.println();
		}
	}
	 ```
Q5) 클래스 intQueue에 임의의 데이터를 검색하는 아레의 메서드를 추가하세요
	큐 안에서 몇 번째에 있는가를 양수로 반환 검색 실패 시 0을 반환
	ex) int serach(int x)
	A5)
	```
	
##### 보충수업 4-1 링 버퍼의 활용

	
	```
	
